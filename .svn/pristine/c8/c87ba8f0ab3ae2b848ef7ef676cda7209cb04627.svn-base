<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.ddit.kixiv.user.mapper.UserDao">
	
	<select id="login" resultType="integer">
		SELECT COUNT(*)  from users
		where user_id=#{user_id} and password=#{password}
	</select>	
	
	<insert id="signup">
		INSERT INTO USERS(user_id, nickname, password, name, phone, zip, add1, add2, email, gelelry_yn, profile_img, join_date, sns_add, exit_yn, user_level)
		VALUES(
				#{user_id}, #{nickname}, #{password}, #{name}, #{phone}, #{zip}, #{add1}, #{add2}, #{email}, 
				#{gallery_yn}, #{profile_img}, sysdate, #{sns_add}, 'n', #{user_level}
				)
	</insert>
	
	<select id="getUser" resultType="kr.ddit.kixiv.user.vo.User">
		select * from users
		where user_id=#{user_id}
	</select>

	<select id="getNickname" resultType="kr.ddit.kixiv.user.vo.User">
		select * from users
		where nickname=#{nickname}
	</select>
	
	<update id="proifleImgUpdate">
		update users
		set profile_img=#{profile_img}
		where user_id=#{user_id}
	</update>
	
	<update id="modify">
		update users
		set nickname=#{nickname}, 
	    password=#{password}, 
	    name=#{name},  
	    phone=#{phone}, 
	    zip=#{zip}, 
	    add1=#{add1}, 
	    add2=#{add2}, 
	    email=#{email}, 
	    sns_add=#{sns_add}
		where user_id=#{user_id}
	</update>
	
	
	<select id="emailCheck" resultType="int">
		select count(email) from users
		where email=#{email}	
	</select>
	
	<select id="totalCount" resultType="int">
	<![CDATA[
		select count(*)
		from users
		where user_level <> 'a'
	]]>
		<if test='searchType.equals("user_id")'>
       		AND user_id like '%' || #{keyword} || '%'
       	</if>
       	<if test='searchType.equals("nickname")'> 
       		AND nickname like '%' || #{keyword} || '%'
       	</if>
       	<if test='searchType.equals("id_nickname")'> 
       		AND (user_id like '%' || #{keyword} || '%'
	   		   OR nickname like '%' || #{keyword} || '%')
       	</if>
	</select>
	
	<select id="userList" resultType="kr.ddit.kixiv.user.vo.User">
		<![CDATA[
		select user_id, nickname, password, name, phone, zip, add1, add2, email, gelelry_yn, profile_img, join_date, sns_add, exit_yn, user_level
		from(
        	select 
        	    user_id, nickname, password, name, phone, zip, add1, add2, email, gelelry_yn, profile_img, join_date, sns_add, exit_yn, user_level,
        	    row_number() over(order by join_date desc) as rNum
        	from users
        	where user_level <> 'a' 
		]]>
         	<if test='searchType.equals("user_id")'>
         		AND user_id like '%' || #{keyword} || '%'
         	</if>
         	<if test='searchType.equals("nickname")'> 
         		AND nickname like '%' || #{keyword} || '%'
         	</if>
         	<if test='searchType.equals("id_nickname")'> 
         		AND (user_id like '%' || #{keyword} || '%'
 		   		   OR nickname like '%' || #{keyword} || '%')
         	</if>
    	)t
    	where rNum between #{startPost} and #{endPost}
	</select>
	
	<select id="findPwd" resultType="kr.ddit.kixiv.user.vo.User">
		select * from users
		where user_id=#{user_id}
		and email=#{email}
	</select>
	
	<update id="changeTempPwd">
		update users
		set password=#{password}
		where user_id=#{user_id}
	</update>
	
	<select id="investTotalCount" resultType="int">
		select count(*)
		from fund f, investor i
		where f.fund_id=i.fund_id
		and i.user_id=#{user_id}
	</select>

	<select id="investList" resultType="map">
		select *
		from(
			select f.fund_id, f.fund_title, 
		       ((select count(*) from investor where fund_id = f.fund_id)*f.one_price/f.fund_achieve)*100 rate,
		       (select code_name from fund_code where fund_code=f.fund_code) fund_sort,
		       f.user_id writer, f.fund_sdate, f.fund_edate, f.one_price,
		       row_number() over(order by f.fund_id desc) as rNum
			from fund f, investor i
			where f.fund_id=i.fund_id
			and i.user_id=#{user_id}
		)t
	    where rNum between #{startPost} and #{endPost}		
	</select>
	
	<select id="myFundTotalCount" resultType="int">
		select count(*)
		from fund
		where user_id=#{user_id}
	</select>

	<select id="myFundList" resultType="map">
		select *
		from(
			select f.FUND_ID, f.FUND_TITLE, f.FUND_CONTENT, f.FUND_ACHIEVE, f.FUND_DATE, f.FUND_SDATE
		    ,f.FUND_EDATE, f.ONE_PRICE, f.USER_ID, f.FUND_CODE
		    ,((select count(*) from investor where fund_id = f.fund_id)*f.one_price/f.fund_achieve)*100 rate
	        ,(select code_name from fund_code where fund_code=f.fund_code) fund_sort
		    ,row_number() over(order by fund_date desc) as rNum 
			from fund f
			where user_id=#{user_id}
		)t
		where rNum between #{startPost} and #{endPost}		
	</select>
	
	<select id="refundTotalCount" resultType="int">
		select count(*)
		from gallery_rent gr, rent r, gallery g
		where gr.rent_seq = r.rent_seq
		and r.gallery_num = g.gallery_num
		<![CDATA[
		and gr.cancel_status <> 'n'
		]]>
	</select>
	
	<select id="refundList" resultType="map">
		select *
		from(     
			select g.GALLERY_NAME, gr.user_id, gr.cancel_date, r.rent_price, gr.rent_num, gr.cancel_status,
			row_number() over(order by gr.cancel_date desc) as rNum
			from gallery_rent gr, rent r, gallery g
			where gr.rent_seq = r.rent_seq
			and r.gallery_num = g.gallery_num
			<![CDATA[
			and gr.cancel_status <> 'n'
			]]>
		)t
		where rNum between #{startPost} and #{endPost}
	</select>

	<update id="permissionRefund">
		update gallery_rent
		set cancel_status='y'
		where rent_num = #{rent_num}
	</update>
	
</mapper>