<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.ddit.kixiv.fund.mapper.FundDao">
   <select id="selectList" resultType="HashMap">
	    select
	        fund_id, fund_title, fund_content, fund_achieve,
	        fund_date, fund_sdate, fund_edate, one_price, fund_zip,
	        fund_add1, fund_add2, place_tel, user_id, fund_code, 
	        total, rate, thumbnail, nickname
	    from (
	        select @rownum := @rownum + 1 as rnum, t.*
	        from (
	            select 
	                a.fund_id, fund_title, fund_content, fund_achieve,
	                fund_date, fund_sdate, fund_edate, one_price, fund_zip,
	                fund_add1, fund_add2, place_tel, a.user_id, a.fund_code,
	                (select count(*) from investor where fund_id = a.fund_id) * one_price as total,
	                ((select count(*) from investor where fund_id = a.fund_id) * one_price / fund_achieve) * 100 as rate,
	                (select b.fund_picpath from fund_picture b where b.fund_id = a.fund_id limit 1) as thumbnail,
	                u.nickname
	            from 
	                fund a
	                join users u on a.user_id = u.user_id
	            <choose>
	                <when test="fundCode.equals('all')">
	                    where 
	                        <![CDATA[a.fund_sdate <= now() ]]>
	                    and 
	                        <![CDATA[a.fund_edate >= now() ]]>
	                </when>
	                
	                <when test="fundCode.equals('cms')">
	                    where
	                        <![CDATA[a.fund_sdate > now()]]>
	                </when>
	                
	                <when test="fundCode.equals('end')">
	                    where 
	                        <![CDATA[a.fund_edate < now()]]>
	                </when>
	                
	                <otherwise>
	                    where
	                        a.fund_code = #{fundCode}
	                    and
	                        <![CDATA[a.fund_sdate <= now()]]>
	                    and 
	                        <![CDATA[a.fund_edate >= now()]]>
	                </otherwise>
	            </choose>
	            ) t
	        join (select @rownum := 0) r
	        where t.nickname like concat('%', #{keyword}, '%')
	    ) s
	    where 
	        s.rnum between #{pageNum}*8-7 and #{pageNum}*8
	    order by
	        fund_edate
	</select>
	
	<select id="getFundBanner" resultType="HashMap">
	    select
	        a.fund_id, fund_title, fund_content, fund_achieve,
	        fund_date, fund_sdate, fund_edate, one_price, fund_zip,
	        fund_add1, fund_add2, place_tel, a.user_id, a.fund_code,
	        (select count(*) from investor where fund_id = a.fund_id) * one_price as total,
	        ((select count(*) from investor where fund_id = a.fund_id) * one_price / fund_achieve) * 100 as rate,
	        (select b.fund_picpath from fund_picture b where b.fund_id = a.fund_id limit 1) as thumbnail,
	        DATEDIFF(a.fund_edate, now()) + 1 as dday,
	        b.nickname
	    from 
	        fund a
	        join users b on a.user_id = b.user_id
	    where 
	        a.fund_edate > now()
	    order by 
	        a.fund_edate, total desc
	    limit 5
	</select>
	
	<select id="getFundTotal" resultType="int">
	    select count(*) 
	    from fund a
	    join users b on a.user_id = b.user_id
	    <choose>
	        <when test="fundCode.equals('all')">
	            where 
	                <![CDATA[a.fund_sdate <= now()]]>
	            and 
	                <![CDATA[a.fund_edate >= now()]]>
	        </when>
	        
	        <when test="fundCode.equals('cms')">
	            where
	                <![CDATA[a.fund_sdate > now()]]>
	        </when>
	        
	        <when test="fundCode.equals('end')">
	            where
	                <![CDATA[a.fund_edate < now()]]>
	        </when>
	        
	        <otherwise>
	            where
	                <![CDATA[a.fund_code = #{fundCode}]]>
	            and
	                <![CDATA[a.fund_sdate <= now()]]>
	            and 
	                a.fund_edate >= now()
	        </otherwise>
	    </choose>
	    <if test="keyword != null and keyword != ''">
	    and b.nickname like concat('%', #{keyword}, '%')
	    </if>
	</select>
	
	<select id="selectCodeList" resultType="kr.ddit.kixiv.fund.vo.FundCodeVO">
	    select 
	        fund_code, code_name 
	    from 
	        fund_code
	</select>
	
	<select id="selectFundVO" resultType="kr.ddit.kixiv.fund.vo.FundVO">
	    select 
	        fund_id, fund_title, fund_content, fund_achieve, 
	        fund_date, fund_sdate, fund_edate, one_price, 
	        fund_zip, fund_add1, fund_add2, place_tel, user_id, fund_code,
	        (select count(*) from investor where fund_id = a.fund_id) * one_price as total,
	        ((select count(*) from investor where fund_id = a.fund_id) * one_price / fund_achieve) * 100 as rate
	    from 
	        fund a
	    where 
	        fund_id = #{fundId}
	</select>
	
	<select id="selectFundPicList" resultType="HashMap">
	    select 
	        a.picseq, 
	        a.fund_id, 
	        a.fund_picpath
	    from 
	        fund_picture a
	    join fund b on a.fund_id = b.fund_id
	    where 
	        a.fund_id = #{fundId}
	</select>
	
	<select id="selectMaxFundId" resultType="int">
	    select 
	        IFNULL(MAX(fund_id), 0) as fundId 
	    from 
	        fund
	</select>
	
	<select id="getPicseq" resultType="HashMap">
	    select 
	        picseq 
	    from 
	        fund_picture 
	    where 
	        fund_id = #{fundId}
	</select>
	
	<select id="selectFundUser" resultType="kr.ddit.kixiv.user.vo.User">
	    select 
	        a.user_id, 
	        a.nickname, 
	        a.password, 
	        a.name, 
	        a.phone, 
	        a.zip, 
	        a.add1, 
	        a.add2, 
	        a.email, 
	        a.gelelry_yn, 
	        a.profile_img,
	        a.join_date, 
	        a.sns_add, 
	        a.exit_yn, 
	        a.user_level
	    from
	        users a
	    join fund b on a.user_id = b.user_id
	    where 
	        b.fund_id = #{fundId}
	</select>
	
	<select id="selectInvestor" resultType="HashMap">
	    select 
	        * 
	    from 
	        investor
	    where 
	        fund_id = #{fund_id}
	    and 
	        user_id = #{user_id}
	</select>
	
	<insert id="insertFund">
	    insert into fund
	        (   
	            fund_id, 
	            fund_title, 
	            fund_content, 
	            fund_achieve, 
	            fund_date, 
	            fund_sdate, 
	            fund_edate, 
	            one_price, 
	            fund_zip, 
	            fund_add1, 
	            fund_add2, 
	            place_tel, 
	            user_id, 
	            fund_code
	        )
	    values
	        (
	            #{fundId}, 
	            #{fund_title}, 
	            #{fund_content},
	            #{achieve}, 
	            now(), 
	            #{sdate}, 
	            #{edate}, 
	            #{one_price}, 
	            #{fund_zip}, 
	            #{fund_add1}, 
	            #{fund_add2}, 
	            #{place_tel}, 
	            #{userId}, 
	            #{fundCode}
	        )
	</insert>
	
	<insert id="insertFundPicture">
	    insert into fund_picture
	    (
	        picseq, 
	        fund_picpath, 
	        fund_picname, 
	        fund_id
	    )
	    values
	    (
	        (select IFNULL(MAX(picseq), 0) + 1 as picseq from fund_picture),
	        #{picPath},
	        #{picName},
	        #{fundId}
	    )
	</insert>
	
	<insert id="insertInvestor">
	    insert into investor
	    (
	        investor_id, 
	        refund_yn, 
	        investor_date, 
	        investor_imp_uid, 
	        investor_mct_uid, 
	        investor_name, 
	        investor_tel, 
	        investor_email,
	        user_id, 
	        fund_id
	    )
	    values
	    (
	        (select IFNULL(MAX(investor_id), 0) + 1 as investor_id from investor),
	        'N',
	        now(),
	        #{fund_imp_uid},
	        #{merchant_uid},
	        #{fund_name},
	        #{fund_tel},
	        #{fund_email},
	        #{user_id},
	        #{fund_id}
	    )
	</insert>
	
	<delete id="deleteFund">
	    delete from fund where fund_id = #{fundId}
	</delete>
	
	<delete id="deleteFundPic">
	    delete from fund_picture where fund_id = #{fundId}
	</delete>
	
	<delete id="deleteFundPicSeq">
	    delete from fund_picture where picseq = #{PICSEQ}
	</delete>
	
	<update id="updateFund">
	    update 
	        fund
	    set 
	        fund_title = #{fund_title},  
	        fund_content = #{fund_content}, 
	        fund_zip = #{fund_zip}, 
	        fund_add1 = #{fund_add1}, 
	        fund_add2 = #{fund_add2}, 
	        place_tel = #{place_tel}
	    where
	        fund_id = #{fundId}
	</update>
   
</mapper>