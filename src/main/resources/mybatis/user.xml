<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.ddit.kixiv.user.mapper.UserDao">
	
	<select id="login" resultType="integer">
	    SELECT COUNT(*) 
	    FROM users
	    WHERE user_id = #{user_id} AND password = #{password};
	</select>
	
	<insert id="signup">
	    INSERT INTO USERS (
	        user_id, nickname, password, name, phone, zip, add1, add2, email, gallery_yn, profile_img, join_date, sns_add, exit_yn, user_level
	    ) VALUES (
	        #{user_id}, #{nickname}, #{password}, #{name}, #{phone}, #{zip}, #{add1}, #{add2}, #{email}, 
	        #{gallery_yn}, #{profile_img}, NOW(), #{sns_add}, 'n', #{user_level}
	    );
	</insert>
	
	<select id="getUser" resultType="kr.ddit.kixiv.user.vo.User">
	    SELECT * 
	    FROM users
	    WHERE user_id = #{user_id};
	</select>
	
	<select id="getNickname" resultType="kr.ddit.kixiv.user.vo.User">
	    SELECT * 
	    FROM users
	    WHERE nickname = #{nickname};
	</select>
	
	<update id="profileImgUpdate">
	    UPDATE users
	    SET profile_img = #{profile_img}
	    WHERE user_id = #{user_id};
	</update>
	
	<update id="modify">
	    UPDATE users
	    SET 
	        nickname = #{nickname}, 
	        password = #{password}, 
	        name = #{name},  
	        phone = #{phone}, 
	        zip = #{zip}, 
	        add1 = #{add1}, 
	        add2 = #{add2}, 
	        email = #{email}, 
	        sns_add = #{sns_add}
	    WHERE user_id = #{user_id};
	</update>
	
	<select id="emailCheck" resultType="int">
	    SELECT COUNT(email) 
	    FROM users
	    WHERE email = #{email};
	</select>
	
	<select id="totalCount" resultType="int">
	    <![CDATA[
	    SELECT COUNT(*)
	    FROM users
	    WHERE user_level <> 'a'
	    ]]>
	    <if test='searchType.equals("user_id")'>
	        AND user_id LIKE CONCAT('%', #{keyword}, '%')
	    </if>
	    <if test='searchType.equals("nickname")'>
	        AND nickname LIKE CONCAT('%', #{keyword}, '%')
	    </if>
	    <if test='searchType.equals("id_nickname")'>
	        AND (user_id LIKE CONCAT('%', #{keyword}, '%')
	             OR nickname LIKE CONCAT('%', #{keyword}, '%'))
	    </if>
	</select>
	
	<select id="userList" resultType="kr.ddit.kixiv.user.vo.User">
	<![CDATA[
	    SELECT user_id, nickname, password, name, phone, zip, add1, add2, email, gallery_yn, profile_img, join_date, sns_add, exit_yn, user_level
	    FROM (
	        SELECT 
	            user_id, nickname, password, name, phone, zip, add1, add2, email, gallery_yn, profile_img, join_date, sns_add, exit_yn, user_level,
	            ROW_NUMBER() OVER (ORDER BY join_date DESC) AS rNum
	        FROM users
	        WHERE user_level <> 'a'
	        ]]>
	        <if test='searchType.equals("user_id")'>
	            AND user_id LIKE CONCAT('%', #{keyword}, '%')
	        </if>
	        <if test='searchType.equals("nickname")'>
	            AND nickname LIKE CONCAT('%', #{keyword}, '%')
	        </if>
	        <if test='searchType.equals("id_nickname")'>
	            AND (user_id LIKE CONCAT('%', #{keyword}, '%')
	                 OR nickname LIKE CONCAT('%', #{keyword}, '%'))
	        </if>
	    ) t
	    WHERE rNum BETWEEN #{startPost} AND #{endPost};
	</select>
	
	<select id="findPwd" resultType="kr.ddit.kixiv.user.vo.User">
	    SELECT * 
	    FROM users
	    WHERE user_id = #{user_id}
	    AND email = #{email};
	</select>
	
	<update id="changeTempPwd">
	    UPDATE users
	    SET password = #{password}
	    WHERE user_id = #{user_id};
	</update>
	
	<select id="investTotalCount" resultType="int">
	    SELECT COUNT(*)
	    FROM fund f
	    JOIN investor i ON f.fund_id = i.fund_id
	    WHERE i.user_id = #{user_id};
	</select>
	
	<select id="investList" resultType="map">
	    SELECT *
	    FROM (
	        SELECT f.fund_id, f.fund_title, 
	            ((SELECT COUNT(*) FROM investor WHERE fund_id = f.fund_id) * f.one_price / f.fund_achieve) * 100 AS rate,
	            (SELECT code_name FROM fund_code WHERE fund_code = f.fund_code) AS fund_sort,
	            f.user_id AS writer, f.fund_sdate, f.fund_edate, f.one_price,
	            ROW_NUMBER() OVER (ORDER BY f.fund_id DESC) AS rNum
	        FROM fund f
	        JOIN investor i ON f.fund_id = i.fund_id
	        WHERE i.user_id = #{user_id}
	    ) t
	    WHERE rNum BETWEEN #{startPost} AND #{endPost};
	</select>
	
	<select id="myFundTotalCount" resultType="int">
	    SELECT COUNT(*)
	    FROM fund
	    WHERE user_id = #{user_id};
	</select>
	
	<select id="myFundList" resultType="map">
	    SELECT *
	    FROM (
	        SELECT f.fund_id, f.fund_title, f.fund_content, f.fund_achieve, f.fund_date, f.fund_sdate,
	            f.fund_edate, f.one_price, f.user_id, f.fund_code,
	            ((SELECT COUNT(*) FROM investor WHERE fund_id = f.fund_id) * f.one_price / f.fund_achieve) * 100 AS rate,
	            (SELECT code_name FROM fund_code WHERE fund_code = f.fund_code) AS fund_sort,
	            ROW_NUMBER() OVER (ORDER BY f.fund_date DESC) AS rNum
	        FROM fund f
	        WHERE f.user_id = #{user_id}
	    ) t
	    WHERE rNum BETWEEN #{startPost} AND #{endPost};
	</select>
	
	<select id="refundTotalCount" resultType="int">
	    SELECT COUNT(*)
	    FROM gallery_rent gr
	    JOIN rent r ON <![CDATA[gr.rent_seq = r.rent_seq]]>
	    JOIN gallery g ON r.gallery_num = g.gallery_num
	    WHERE <![CDATA[gr.cancel_status <> 'n';]]>
	</select>
	
	<select id="refundList" resultType="map">
	    SELECT *
	    FROM (
	        SELECT g.gallery_name, gr.user_id, gr.cancel_date, r.rent_price, gr.rent_num, gr.cancel_status,
	            ROW_NUMBER() OVER (ORDER BY gr.cancel_date DESC) AS rNum
	        FROM gallery_rent gr
	        JOIN rent r ON gr.rent_seq = r.rent_seq
	        JOIN gallery g ON r.gallery_num = g.gallery_num
	        WHERE <![CDATA[gr.cancel_status <> 'n']]>
	    ) t
	    WHERE rNum BETWEEN #{startPost} AND #{endPost};
	</select>
	
	<update id="permissionRefund">
	    UPDATE gallery_rent
	    SET cancel_status = 'y'
	    WHERE rent_num = #{rent_num};
	</update>
</mapper>