<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.ddit.kixiv.chart.mapper.ChartMapper">
	<!-- 	select month, count(MONTH) as cnt 
		from(
		    select EXTRACT(MONTH FROM Join_Date) AS MONTH, User_Id from users Order By MONTH    
		) 
		group by month
		Order By month asc -->
	<select id="chartCountDate" resultType="String">
	    select Distinct MONTH(Join_Date) AS MONTH from users Order By MONTH asc
	</select>
	
	<select id="chartCountPeple" resultType="String">
	    select IFNULL(B.CNT,0) CNT
	    from
	    (
	        select Distinct MONTH(Join_Date) AS MONTH from users Order By MONTH asc
	    ) A LEFT OUTER JOIN
	    (
	        select MONTH(Join_Date) AS MONTH, COUNT(User_Id) CNT from users 
	        where USER_LEVEL = 'u'
	        group by MONTH(Join_Date)
	    ) B ON (A.MONTH = B.MONTH)
	    Order By A.MONTH asc
	</select>
	
	<select id="chartCountGPeple" resultType="String">
	    select IFNULL(B.CNT,0) CNT
	    from
	    (
	        select Distinct MONTH(Join_Date) AS MONTH from users Order By MONTH asc
	    ) A LEFT OUTER JOIN
	    (
	        select MONTH(Join_Date) AS MONTH, COUNT(User_Id) CNT from users 
	        where USER_LEVEL = 'g'
	        group by MONTH(Join_Date)
	    ) B ON (A.MONTH = B.MONTH)
	    Order By A.MONTH asc
	</select>
	
	<!-- 펀딩 차트 -->
	<select id="chartFundCountData" resultType="String">
	    select Distinct MONTH(FUND_DATE) AS MONTH from fund Order By MONTH asc
	</select>
	
	<select id="chartFundCountCnt" resultType="String">
	    select IFNULL(B.CNT,0) CNT
	    from
	    (
	        select Distinct MONTH(FUND_DATE) AS MONTH from fund Order By MONTH asc
	    ) A LEFT OUTER JOIN
	    (
	        select MONTH(FUND_DATE) AS MONTH, COUNT(FUND_DATE) CNT from fund 
	        group by MONTH(FUND_DATE)
	    ) B ON (A.MONTH = B.MONTH)
	    Order By A.MONTH asc
	</select>
	
	<select id="chartTag" resultType="String">
	    SELECT TAG_NAME
	    FROM (
	        select Distinct(T.TAG_ID) AS TAG_ID, TAG_NAME 
	        from tag T
	    ) A LEFT OUTER JOIN (
	        select TAG_ID, COUNT(TAG_ID) CNT 
	        from taglist 
	        group by TAG_ID 
	    ) B ON (A.TAG_ID = B.TAG_ID)
	    Order By A.TAG_NAME asc
	</select>
	
	<select id="tCntlist" resultType="String">
	    SELECT IFNULL(B.CNT,0) CNT
	    FROM (
	        select Distinct(T.TAG_ID) AS TAG_ID, TAG_NAME 
	        from tag T
	    ) A LEFT OUTER JOIN (
	        select TAG_ID, COUNT(TAG_ID) CNT 
	        from taglist 
	        group by TAG_ID 
	    ) B ON (A.TAG_ID = B.TAG_ID)
	    Order By A.TAG_NAME asc
	</select>
	
	<select id="taglistRankList" resultType="String">
	    SELECT TAG_NAME
	    FROM (
	        select Distinct(T.TAG_ID) AS TAG_ID, TAG_NAME 
	        from tag T
	    ) A LEFT OUTER JOIN (
	        select TAG_ID, COUNT(TAG_ID) CNT 
	        from taglist 
	        group by TAG_ID 
	    ) B ON (A.TAG_ID = B.TAG_ID)
	    WHERE B.CNT IS NOT NULL
	    Order By A.TAG_NAME asc
	    LIMIT 5
	</select>
	
	<select id="tCntRankList" resultType="String">
	    SELECT IFNULL(B.CNT,0) CNT
	    FROM (
	        select Distinct(T.TAG_ID) AS TAG_ID, TAG_NAME 
	        from tag T
	    ) A LEFT OUTER JOIN (
	        select TAG_ID, COUNT(TAG_ID) CNT 
	        from taglist 
	        group by TAG_ID 
	    ) B ON (A.TAG_ID = B.TAG_ID)
	    WHERE B.CNT IS NOT NULL
	    Order By A.TAG_NAME asc
	    LIMIT 5
	</select>
	
	<select id="userRankList" resultType="String">
	    SELECT C.USER_ID, C.CNT 
	    FROM USERS Z 
	    JOIN (
	        SELECT P.USER_ID AS USER_ID, COUNT(P.USER_ID) CNT
	        FROM picture P
	        JOIN LIKEY L ON P.PIC_NUM = L.PIC_NUM    
	        GROUP BY P.USER_ID
	    ) C ON Z.USER_ID = C.USER_ID
	    ORDER BY C.CNT DESC
	    LIMIT 5
	</select>
	
	<select id="userRankCntList" resultType="String">
	    SELECT C.CNT 
	    FROM users Z 
	    JOIN (
	        SELECT P.USER_ID AS USER_ID, COUNT(P.USER_ID) CNT
	        FROM picture P
	        JOIN LIKEY L ON P.PIC_NUM = L.PIC_NUM    
	        GROUP BY P.USER_ID
	    ) C ON Z.USER_ID = C.USER_ID
	    ORDER BY C.CNT DESC
	    LIMIT 5
	</select>
	
	<select id="newUserRankList" resultType="String">
	    SELECT C.USER_ID
	    FROM (
	        SELECT U.USER_ID, U.JOIN_DATE 
	        FROM users U
	        WHERE U.JOIN_DATE BETWEEN DATE_SUB(CURDATE(), INTERVAL 6 MONTH) AND CURDATE()
	    ) Z
	    JOIN (
	        SELECT P.USER_ID AS USER_ID, COUNT(P.USER_ID) CNT
	        FROM picture P
	        JOIN LIKEY L ON P.PIC_NUM = L.PIC_NUM    
	        GROUP BY P.USER_ID
	    ) C ON Z.USER_ID = C.USER_ID
	    ORDER BY C.CNT DESC
	    LIMIT 5
	</select>
	
	<select id="newUserRank" resultType="String">
	    SELECT C.CNT 
	    FROM (
	        SELECT U.USER_ID, U.JOIN_DATE 
	        FROM users U
	        WHERE U.JOIN_DATE BETWEEN DATE_SUB(CURDATE(), INTERVAL 6 MONTH) AND CURDATE()
	    ) US
	    JOIN (
	        SELECT P.USER_ID AS USER_ID, COUNT(P.USER_ID) CNT
	        FROM picture P
	        JOIN LIKEY L ON P.PIC_NUM = L.PIC_NUM    
	        GROUP BY P.USER_ID
	    ) C ON US.USER_ID = C.USER_ID
	    ORDER BY C.CNT DESC
	    LIMIT 5
	</select>

</mapper>